package org.kimego.demos.db.persistence;

import java.util.Collection;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.TypedQuery;

import org.kimego.demos.db.domain.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

@Service
@Transactional
public class UserDaoImpl implements IUserDao {
	
	private EntityManager entities;

	
	public UserDaoImpl(EntityManagerFactory factory) {
		this.setEntities(factory.createEntityManager());
	}
	
	public User findUserById(long uid) {
		EntityManager manager = getFactory().createEntityManager();
		TypedQuery<User> query = manager.createQuery("select u from User u where u.id = :id", User.class);
		query.setParameter("id", uid);
		return query.getSingleResult();
	}

	public Collection<User> findUsersByName(String partialName) {
		return null;
	}

	public void save(User user) {
		EntityManager manager = getFactory().createEntityManager();
		try {
			manager.persist(user);
			manager.flush();
		} finally {
			manager.close();
		}
	}

	public EntityManager getEntities() {
		return entities;
	}

	public void setEntities(EntityManager entities) {
		this.entities = entities;
	}
}
